{"version":3,"sources":["components/Login.js","firebase.js","components/MessageForm.js","components/Message.js","colors.js","App.js","index.js"],"names":["Login","setUsername","useState","input","setInput","className","onSubmit","e","preventDefault","InputGroup","FormControl","placeholder","aria-label","aria-describedby","onChange","target","value","Append","Button","variant","type","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","MessageForm","username","avatarColor","message","setMessage","length","newMessage","avatar","timestamp","FieldValue","serverTimestamp","collection","add","Message","forwardRef","ref","style","backgroundColor","trim","split","toUpperCase","Card","colors","App","messages","setMessages","setAvatarColor","useEffect","Math","floor","random","randomColors","orderBy","onSnapshot","snapshot","data","docs","map","doc","id","msgBox","document","getElementById","scrollTop","scrollHeight","role","key","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.146f32ef.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\n\nconst Login = ({ setUsername }) => {\n  const [input, setInput] = useState('');\n\n  const handleOnChange = (e) => {\n    setInput(e.target.value);\n  };\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    setUsername(input);\n  };\n\n  return (\n    <div className='app__login text-center mt-5 p-3'>\n      <h1 className='mt-5 mb-5'>Welcome</h1>\n      <form onSubmit={handleOnSubmit}>\n        <InputGroup className='mb-3'>\n          <FormControl\n            placeholder='Enter your name...'\n            aria-label='username'\n            aria-describedby='basic-addon2'\n            onChange={handleOnChange}\n          />\n          <InputGroup.Append>\n            <Button variant='primary' type='submit'>\n              Let's Go\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDoqVDbqi3MCK_HCClhdOZ2wSuTzXUvQ3c',\n  authDomain: 'fir-chat-app-17311.firebaseapp.com',\n  databaseURL: 'https://fir-chat-app-17311.firebaseio.com',\n  projectId: 'fir-chat-app-17311',\n  storageBucket: 'fir-chat-app-17311.appspot.com',\n  messagingSenderId: '414556650810',\n  appId: '1:414556650810:web:e164cb4aa04ec9d8396403',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nexport default db;\n","import React, { useState } from 'react';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport firebase from 'firebase';\nimport db from '../firebase';\n\nconst MessageForm = ({ username, avatarColor }) => {\n  const [message, setMessage] = useState('');\n\n  const handleOnChange = (e) => {\n    setMessage(e.target.value);\n  };\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    if (message.length === 0) return;\n    const newMessage = {\n      username: username,\n      message: message,\n      avatar: avatarColor,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    };\n    db.collection('messages').add(newMessage);\n\n    setMessage('');\n  };\n  return (\n    <div className='app__message-form'>\n      <form onSubmit={handleOnSubmit}>\n        <InputGroup className='mb-3'>\n          <FormControl\n            placeholder='Text Message'\n            aria-label='message'\n            aria-describedby='basic-addon2'\n            value={message}\n            onChange={handleOnChange}\n          />\n          <InputGroup.Append>\n            <Button variant='primary' type='submit'>\n              Send\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </form>\n    </div>\n  );\n};\n\nexport default MessageForm;\n","import React, { useState, useEffect, forwardRef } from 'react';\nimport { Card } from 'react-bootstrap';\n\nconst Message = forwardRef(({ message, username }, ref) => {\n  return (\n    <div ref={ref} className={`app__message ${username === message.username ? 'app__message-current-user' : ''}`}>\n      <div className='app__message-wrapper d-flex align-items-center'>\n        <div className='app__message-avatar mr-2' style={{ backgroundColor: message.avatar }}>\n          {message.username.trim().split('')[0].toUpperCase()}\n        </div>\n        <div>\n          <Card className='app__message-card p-2'>\n            {username !== message.username && (\n              <div className='app__message-card-username text-primary'>{message.username}</div>\n            )}\n            {message.message}\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default Message;\n","const colors = [\n  '#FF6633',\n  '#FFB399',\n  '#B366CC',\n  '#B33300',\n  '#CC80CC',\n  '#991AFF',\n  '#E666FF',\n  '#4DB3FF',\n  '#1AB399',\n  '#E666B3',\n  '#33991A',\n  '#CC9999',\n  '#00E680',\n  '#4D80CC',\n  '#9900B3',\n  '#E64D66',\n  '#FF4D4D',\n  '#6666FF',\n];\n\nexport default colors;\n","import React, { useState, useEffect } from 'react';\n\nimport Login from './components/Login';\nimport MessageForm from './components/MessageForm';\nimport Message from './components/Message';\nimport FlipMove from 'react-flip-move';\nimport './App.css';\n\nimport db from './firebase';\nimport colors from './colors';\n\nfunction randomColors(colors) {\n  const color = colors[Math.floor(Math.random() * colors.length)];\n  return color;\n}\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [avatarColor, setAvatarColor] = useState('#6666FF');\n\n  // set avatar background for user\n  useEffect(() => {\n    setAvatarColor(randomColors(colors));\n  }, []);\n\n  // fetch messages from database\n  useEffect(() => {\n    db.collection('messages')\n      .orderBy('timestamp', 'asc')\n      .onSnapshot((snapshot) => {\n        const data = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setMessages(data);\n      });\n  }, []);\n\n  //scroll to bottom every time new message received\n  useEffect(() => {\n    const msgBox = document.getElementById('messages-box');\n    if (msgBox) {\n      msgBox.scrollTop = msgBox.scrollHeight;\n    }\n  }, [messages]);\n\n  return (\n    <div className='app'>\n      {!username && <Login setUsername={setUsername} />}\n      {username && (\n        <div className='app__main my-2'>\n          <div className='app__main-header d-flex justify-content-between align-items-center'>\n            <h3>\n              <span className='mr-1' role='img' aria-label='rocket'>\n                ðŸš€\n              </span>\n              Chat\n            </h3>\n            <div>\n              Welcome <span className='font-weight-bold'>{username}</span>\n            </div>\n          </div>\n\n          <div className='app__main-messages' id='messages-box'>\n            <FlipMove>\n              {messages.map((message) => (\n                <Message key={message.id} message={message} username={username}></Message>\n              ))}\n            </FlipMove>\n          </div>\n          <MessageForm username={username} avatarColor={avatarColor} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}